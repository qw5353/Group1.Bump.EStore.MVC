@model IEnumerable<Bump.EStore.MVC.ViewModels.MemberTags.MemberTagIndexVM>
@using X.PagedList.Mvc;
@using X.PagedList;

@{
    ViewBag.Title = "會員標籤";
    ViewBag.Breadcrumbs = new string[] { "會員管理", "會員標籤" };
}

@section customStyles{
    <link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <style>
        .scrollable-table {
            height: 58vh;
            overflow-y: scroll;
        }

            .scrollable-table::-webkit-scrollbar {
                width: 10px;
            }

            .scrollable-table::-webkit-scrollbar-track {
                border-radius: 10px;
                margin: 40px 130px 20px 130px;
                background-color: rgb(187, 187, 187, 0.2);
            }

            .scrollable-table::-webkit-scrollbar-thumb {
                height: 50px;
                border-radius: 10px;
                background-color: rgb(187, 187, 187, 0.84);
            }
        .tdw{
            width:150px;
        }
    </style>
}


<h2>會員標籤</h2>


<p>
    <span class="ms-auto d-flex">
        <a class="btn btn-warning " href="/MemberTags/Create" role="button"><i class="fa-solid fa-plus me-2"></i>新增標籤</a>
    </span>
</p>
<div class="scrollable-table">
    <table class="table table-hover table-striped">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TagName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ConditionName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Operator)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Unit)
            </th>*@
            <th></th>
            
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <span class="fs-6 mx-1 my-1 badge rounded-pill text-black bg-primary-subtle">@Html.DisplayFor(modelItem => item.TagName)</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.ConditionName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Operator)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit)
                </td>*@
                <td class="tdw">  
                    <div class="d-flex">
                        @*<div class="p-1"><a class="btn btn-success" href="@Url.Action("Edit" , new { id = item.Id })" role="button"><i class="fa-solid fa-pen-to-square" style="color: #ffffff;"></i></a></div>*@
                        @*<div class="me-0"><a class="btn btn-danger" href="@Url.Action("Delete" , new { id = item.Id })" role="button"><i class="fa-solid fa-trash"></i></a></div>*@
                        <button type="submit" class="btn btn-outline-danger delete" id="@item.Id"><i class="fa-solid fa-trash"></i></button>
                    </div>
               </td>
            </tr>
        }
    </table>
</div>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://kit.fontawesome.com/afa27cfccd.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.12/dist/sweetalert2.all.min.js"></script>
    <script>
        var deleteMessages = document.querySelectorAll('.delete');
        deleteMessages.forEach(deleteMessage => {
            deleteMessage.onclick = function () {

                Swal.fire({
                    title: '你確定要刪除這筆紀錄嗎?',
                    text: "刪了就回不去了",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '確定',
                    cancelButtonText: '取消'
                })
                    .then(function (result) {
                        if (result.value) {
                            fetch(`/MemberTags/Delete`, {
                                method: "POST",
                                body: JSON.stringify({
                                    id: deleteMessage.id
                                }),
                                headers: {
                                    "content-type": "application/json"
                                }
                            })
                                .then(res => {
                                    if (res.ok) {
                                        location.reload();
                                    }
                                })
                                .catch(err => {
                                    alert(err)
                                })
                        }
                    })
            }
        });
    </script>

}
