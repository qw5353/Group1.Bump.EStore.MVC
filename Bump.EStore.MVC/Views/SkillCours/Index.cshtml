@model IEnumerable<Bump.EStore.MVC.ViewModels.SkillCoursIndexVM>
@using X.PagedList.Mvc;
@using X.PagedList;
@{
    ViewBag.Title = "技巧課程管理";
    ViewBag.Breadcrumbs = new string[] { "課程管理", "技巧課程管理" };
}
@section customStyles{
    <link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <script src="https://kit.fontawesome.com/ad3e947694.js" crossorigin="anonymous"></script>

}

<h2>技巧課程管理</h2>

<p>
    @*@Html.ActionLink("新增技巧課程", "Create")*@
    <a class="btn btn-success" href="@Url.Action("Create")">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-square-fill" viewBox="0 0 16 16">
            <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0z"></path>
        </svg>
        新增技巧課程
    </a>
</p>

<table id="myTable" class="table table-hover table-striped">
    <thead>
        <tr>
            <th style="text-align: center;">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th style="text-align: center;">
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th style="text-align: center;">
                @Html.DisplayNameFor(model => model.Thumbnail)
            </th>
            <th style="text-align: center;">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th style="text-align: center;">
                @Html.DisplayNameFor(model => model.PeopleMin)
            </th>
            <th style="text-align: center;">
                @Html.DisplayNameFor(model => model.PeopleMax)
            </th>
            <th style="text-align: center;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.Price)元
                </td>
                <td style="text-align: center;">
                    <img src="~/Uploads/SkillCours_imgs/@item.Thumbnail" width="100" height="100" />
                </td>
                <td class="expandable-cell" style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.PeopleMin)人
                </td>
                <td style="text-align: center;">
                    @Html.DisplayFor(modelItem => item.PeopleMax)人
                </td>
                <td style="text-align: center;">
                    @*@Html.ActionLink("更新課程資料", "Edit", new { id = item.Id }, new { @class = "btn btn-secondary" })
        @Html.ActionLink("更新課程圖片", "EditImg", new { id = item.Id }, new { @class = "btn btn-secondary" })
        @Html.ActionLink("刪除課程", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })*@
                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn">
                        <i class="fa fa-2xl fa-pen-to-square"></i>
                    </a>
                    <a href="@Url.Action("EditImg", new { id = item.Id })" class="btn">
                        <i class="fa-regular fa-image fa-2xl" style="color: #ab962b;"></i>
                    </a>
                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn">
                        <i class="fa-regular fa-trash-can fa-xl" style="color: #de5d17;"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))

@section scripts
    {


    <script>
        $('.expandable-cell').each(function () {
            var $cell = $(this);
            var originalText = $cell.text().trim();
            var truncatedText = originalText.slice(0, 10) + '...';
            var isExpanded = false;

            $cell.text(truncatedText);
            $cell.attr('title', originalText);

            $cell.click(function () {
                if (isExpanded) {
                    $cell.text(truncatedText);
                } else {
                    $cell.text(originalText);
                }

                isExpanded = !isExpanded;
            });

            $cell.dblclick(function () {
                if (isExpanded) {
                    $cell.text(truncatedText);
                } else {
                    $cell.text(originalText);
                }

                isExpanded = !isExpanded;
            });
        });

    </script>
}
